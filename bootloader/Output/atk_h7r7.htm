<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\Output\atk_h7r7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\Output\atk_h7r7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6220000: Last Updated: Wed Jun  4 20:22:28 2025
<BR><P>
<H3>Maximum Stack Usage =        540 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; sys_xspi1_enable_memmapmode &rArr; HAL_XSPI_Init &rArr; HAL_XSPI_MspInit &rArr; HAL_GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[27]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[27]">ADC1_2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[7a]">ADF1_FLT0_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32h7rsxx_it.o(.text.BusFault_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[7d]">CEC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[5e]">CORDIC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[7b]">CRS_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[60]">DCMIPP_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[63]">DMA2D_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[b]">DTS_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32h7rsxx_it.o(.text.DebugMon_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[5d]">ETH_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[1d]">EXTI10_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[1e]">EXTI11_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[1f]">EXTI12_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[20]">EXTI13_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[21]">EXTI14_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[22]">EXTI15_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[18]">EXTI5_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[19]">EXTI6_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[1a]">EXTI7_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[1b]">EXTI8_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[1c]">EXTI9_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[94]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[95]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[96]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[97]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[f]">FLASH_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[69]">FMC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[11]">FPU_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[65]">GFXMMU_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[5f]">GFXTIM_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[28]">GPDMA1_Channel0_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[83]">GPDMA1_Channel10_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[84]">GPDMA1_Channel11_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[85]">GPDMA1_Channel12_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[86]">GPDMA1_Channel13_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[87]">GPDMA1_Channel14_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[88]">GPDMA1_Channel15_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[29]">GPDMA1_Channel1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[2a]">GPDMA1_Channel2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[2b]">GPDMA1_Channel3_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[2c]">GPDMA1_Channel4_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[2d]">GPDMA1_Channel5_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[2e]">GPDMA1_Channel6_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[2f]">GPDMA1_Channel7_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[81]">GPDMA1_Channel8_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[82]">GPDMA1_Channel9_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[92]">GPU2D_ER_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[91]">GPU2D_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[25]">HASH_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[41]">HPDMA1_Channel0_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[8b]">HPDMA1_Channel10_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[8c]">HPDMA1_Channel11_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[8d]">HPDMA1_Channel12_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[8e]">HPDMA1_Channel13_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[8f]">HPDMA1_Channel14_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[90]">HPDMA1_Channel15_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[42]">HPDMA1_Channel1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[43]">HPDMA1_Channel2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[44]">HPDMA1_Channel3_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[45]">HPDMA1_Channel4_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[46]">HPDMA1_Channel5_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[47]">HPDMA1_Channel6_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[48]">HPDMA1_Channel7_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[89]">HPDMA1_Channel8_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[8a]">HPDMA1_Channel9_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32h7rsxx_it.o(.text.HardFault_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[4e]">I2C1_ER_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[4d]">I2C1_EV_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[50]">I2C2_ER_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[4f]">I2C2_EV_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[52]">I2C3_ER_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[51]">I2C3_EV_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[5b]">I3C1_ER_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[5a]">I3C1_EV_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[66]">I3C1_WKUP_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[93]">ICACHE_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[c]">IWDG_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[64]">JPEG_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[73]">LPTIM1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[74]">LPTIM2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[75]">LPTIM3_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[76]">LPTIM4_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[77]">LPTIM5_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[7f]">LPUART1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[62]">LTDC_ER_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[61]">LTDC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[79]">MDIOS_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32h7rsxx_it.o(.text.MemManage_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32h7rsxx_it.o(.text.NMI_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[6c]">OTG_FS_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[5c]">OTG_HS_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[24]">PKA_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[7e]">PSSI_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[a]">PVD_PVM_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32h7rsxx_it.o(.text.PendSV_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[10]">RAMECC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[26]">RNG_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[23]">RTC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[49]">SAI1_A_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[4a]">SAI1_B_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[4b]">SAI2_A_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[4c]">SAI2_B_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[6a]">SDMMC1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[6b]">SDMMC2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[78]">SPDIF_RX_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[3b]">SPI1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[3c]">SPI2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[3e]">SPI4_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[3f]">SPI5_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[40]">SPI6_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32h7rsxx_it.o(.text.SVC_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32h7rsxx_it.o(.text.SysTick_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[99]">SystemInit</a> from system_stm32h7rsxx.o(.text.SystemInit) referenced from startup_stm32h7r7xx.o(.text)
 <LI><a href="#[12]">TAMP_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[6d]">TIM12_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[6e]">TIM13_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[6f]">TIM14_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[70]">TIM15_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[71]">TIM16_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[72]">TIM17_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[30]">TIM1_BRK_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[33]">TIM1_CC_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[32]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[31]">TIM1_UP_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[34]">TIM2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[35]">TIM3_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[36]">TIM4_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[37]">TIM5_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[38]">TIM6_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[39]">TIM7_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[3a]">TIM9_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[56]">UART4_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[57]">UART5_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[58]">UART7_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[59]">UART8_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[9b]">UART_DMAAbortOnError</a> from stm32h7rsxx_hal_uart.o(.text.UART_DMAAbortOnError) referenced 2 times from stm32h7rsxx_hal_uart.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[9c]">UART_RxISR_16BIT</a> from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_16BIT) referenced 2 times from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN)
 <LI><a href="#[9c]">UART_RxISR_16BIT</a> from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_16BIT) referenced 2 times from stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[9f]">UART_RxISR_16BIT_FIFOEN</a> from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) referenced 2 times from stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[9d]">UART_RxISR_8BIT</a> from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_8BIT) referenced 2 times from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN)
 <LI><a href="#[9d]">UART_RxISR_8BIT</a> from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_8BIT) referenced 2 times from stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[9e]">UART_RxISR_8BIT_FIFOEN</a> from stm32h7rsxx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) referenced 2 times from stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[7c]">UCPD1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[53]">USART1_IRQHandler</a> from usart.o(.text.USART1_IRQHandler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[54]">USART2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[55]">USART3_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32h7rsxx_it.o(.text.UsageFault_Handler) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[80]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[67]">XSPI1_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[68]">XSPI2_IRQHandler</a> from startup_stm32h7r7xx.o(.text) referenced from startup_stm32h7r7xx.o(RESET)
 <LI><a href="#[9a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32h7r7xx.o(.text)
 <LI><a href="#[98]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a0]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a8]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[fe]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ff]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[100]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[101]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[102]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>ADF1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CORDIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DCMIPP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DTS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>GFXMMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GFXTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPDMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>GPDMA1_Channel10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>GPDMA1_Channel11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>GPDMA1_Channel12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>GPDMA1_Channel13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>GPDMA1_Channel14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>GPDMA1_Channel15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPDMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPDMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPDMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GPDMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>GPDMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>GPDMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>GPDMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>GPDMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>GPDMA1_Channel9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>GPU2D_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>GPU2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>HASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>HPDMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>HPDMA1_Channel10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>HPDMA1_Channel11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>HPDMA1_Channel12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>HPDMA1_Channel13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>HPDMA1_Channel14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>HPDMA1_Channel15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>HPDMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>HPDMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>HPDMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>HPDMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>HPDMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>HPDMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>HPDMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>HPDMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>HPDMA1_Channel9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I3C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I3C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>I3C1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>ICACHE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>IWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PKA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>PSSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RAMECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SAI1_A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SAI1_B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SAI2_A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SAI2_B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>UCPD1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>XSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>XSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h7r7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[105]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[106]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[107]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[108]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32h7rsxx_hal_flash.o(.text.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
</UL>

<P><STRONG><a name="[ab]"></a>HAL_DMA_Abort</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32h7rsxx_hal_dma.o(.text.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c2]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7rsxx_hal_dma.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>HAL_Delay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32h7rsxx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_hardware_reset
</UL>

<P><STRONG><a name="[ad]"></a>HAL_FLASHEx_OBProgram</STRONG> (Thumb, 492 bytes, Stack size 48 bytes, stm32h7rsxx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_FLASHEx_OBProgram &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7rsxx_hal_flash.o(.text.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>HAL_FLASH_OB_Lock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7rsxx_hal_flash.o(.text.HAL_FLASH_OB_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>HAL_FLASH_OB_Unlock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32h7rsxx_hal_flash.o(.text.HAL_FLASH_OB_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ee]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32h7rsxx_hal_flash.o(.text.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, stm32h7rsxx_hal_gpio.o(.text.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspDeInit
</UL>

<P><STRONG><a name="[cd]"></a>HAL_GPIO_Init</STRONG> (Thumb, 376 bytes, Stack size 44 bytes, stm32h7rsxx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
</UL>

<P><STRONG><a name="[e6]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7rsxx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_hardware_reset
</UL>

<P><STRONG><a name="[aa]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7rsxx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MemoryMapped
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Transmit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_AutoPolling
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Receive
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableUSBVoltageDetector
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_HyperbusCmd
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_HyperbusCfg
</UL>

<P><STRONG><a name="[df]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7rsxx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[ae]"></a>HAL_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7rsxx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>HAL_InitTick</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32h7rsxx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[f7]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32h7rsxx_hal_cortex.o(.text.HAL_MPU_ConfigRegion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MPU_ConfigRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mpu_config
</UL>

<P><STRONG><a name="[f6]"></a>HAL_MPU_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32h7rsxx_hal_cortex.o(.text.HAL_MPU_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mpu_config
</UL>

<P><STRONG><a name="[f8]"></a>HAL_MPU_Enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32h7rsxx_hal_cortex.o(.text.HAL_MPU_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mpu_config
</UL>

<P><STRONG><a name="[b1]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_hal.o(.text.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[ce]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32h7rsxx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[b3]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32h7rsxx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[af]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7rsxx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[b4]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32h7rsxx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[b5]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32h7rsxx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_ControlVoltageScaling
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[b6]"></a>HAL_PWREx_EnableUSBVoltageDetector</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32h7rsxx_hal_pwr_ex.o(.text.HAL_PWREx_EnableUSBVoltageDetector))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_EnableUSBVoltageDetector
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[f9]"></a>HAL_PWREx_EnableXSPIM1</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7rsxx_hal_pwr_ex.o(.text.HAL_PWREx_EnableXSPIM1))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[fa]"></a>HAL_PWREx_EnableXSPIM2</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7rsxx_hal_pwr_ex.o(.text.HAL_PWREx_EnableXSPIM2))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[b7]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2386 bytes, Stack size 24 bytes, stm32h7rsxx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
</UL>

<P><STRONG><a name="[b8]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 554 bytes, Stack size 32 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[ba]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[bb]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[bc]"></a>HAL_RCC_GetPCLK4Freq</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_GetPCLK4Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetPCLK4Freq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[e1]"></a>HAL_RCC_GetPLL2QFreq</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_GetPLL2QFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPLL2QFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[e2]"></a>HAL_RCC_GetPLL3QFreq</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_GetPLL3QFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPLL3QFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[b9]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK4Freq
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[bd]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1180 bytes, Stack size 32 bytes, stm32h7rsxx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_OscConfig &rArr; RCC_PLL_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Config
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[fb]"></a>HAL_SBS_EnableIOSpeedOptimize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7rsxx_hal.o(.text.HAL_SBS_EnableIOSpeedOptimize))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
</UL>

<P><STRONG><a name="[b2]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32h7rsxx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[c4]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c6]"></a>HAL_UARTEx_RxFifoFullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart_ex.o(.text.HAL_UARTEx_RxFifoFullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c5]"></a>HAL_UARTEx_TxFifoEmptyCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart_ex.o(.text.HAL_UARTEx_TxFifoEmptyCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c1]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 926 bytes, Stack size 16 bytes, stm32h7rsxx_hal_uart.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxFifoFullCallback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_TxFifoEmptyCallback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[c7]"></a>HAL_UART_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32h7rsxx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[c8]"></a>HAL_UART_MspInit</STRONG> (Thumb, 204 bytes, Stack size 184 bytes, usart.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[cf]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32h7rsxx_hal_uart.o(.text.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[d1]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, usart.o(.text.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
</UL>

<P><STRONG><a name="[c3]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>HAL_XSPIM_Config</STRONG> (Thumb, 324 bytes, Stack size 44 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPIM_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_XSPIM_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
</UL>

<P><STRONG><a name="[d2]"></a>HAL_XSPI_AutoPolling</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_AutoPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_XSPI_AutoPolling
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
</UL>

<P><STRONG><a name="[d3]"></a>HAL_XSPI_Command</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_XSPI_Command &rArr; XSPI_ConfigCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_ConfigCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
</UL>

<P><STRONG><a name="[d5]"></a>HAL_XSPI_DeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_XSPI_DeInit &rArr; HAL_XSPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
</UL>

<P><STRONG><a name="[d7]"></a>HAL_XSPI_HyperbusCfg</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_HyperbusCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_XSPI_HyperbusCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
</UL>

<P><STRONG><a name="[d8]"></a>HAL_XSPI_HyperbusCmd</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_HyperbusCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_XSPI_HyperbusCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_memory_mapped
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_config_differential_clock
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_check_identification
</UL>

<P><STRONG><a name="[d9]"></a>HAL_XSPI_Init</STRONG> (Thumb, 410 bytes, Stack size 24 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = HAL_XSPI_Init &rArr; HAL_XSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
</UL>

<P><STRONG><a name="[db]"></a>HAL_XSPI_MemoryMapped</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_MemoryMapped))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_XSPI_MemoryMapped
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_memory_mapped
</UL>

<P><STRONG><a name="[d6]"></a>HAL_XSPI_MspDeInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, sys.o(.text.HAL_XSPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_XSPI_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_DeInit
</UL>

<P><STRONG><a name="[da]"></a>HAL_XSPI_MspInit</STRONG> (Thumb, 196 bytes, Stack size 184 bytes, sys.o(.text.HAL_XSPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = HAL_XSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
</UL>

<P><STRONG><a name="[dd]"></a>HAL_XSPI_Receive</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_XSPI_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_config_differential_clock
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_check_identification
</UL>

<P><STRONG><a name="[fc]"></a>HAL_XSPI_SetClockPrescaler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_SetClockPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
</UL>

<P><STRONG><a name="[de]"></a>HAL_XSPI_Transmit</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, stm32h7rsxx_hal_xspi.o(.text.HAL_XSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_XSPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_config_differential_clock
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[f5]"></a>JumpToApplication</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, main.o(.text.JumpToApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JumpToApplication
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>SystemInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, system_stm32h7rsxx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[cb]"></a>UART_CheckIdleState</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, stm32h7rsxx_hal_uart.o(.text.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[ca]"></a>UART_SetConfig</STRONG> (Thumb, 1120 bytes, Stack size 24 bytes, stm32h7rsxx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL3QFreq
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPLL2QFreq
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK4Freq
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d0]"></a>UART_Start_Receive_IT</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>

<P><STRONG><a name="[e0]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, stm32h7rsxx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[53]"></a>USART1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usart.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7rsxx_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h7r7xx.o(RESET)
</UL>
<P><STRONG><a name="[f3]"></a>delay_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text.delay_init))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>hyperram_init</STRONG> (Thumb, 336 bytes, Stack size 216 bytes, hyperram.o(.text.hyperram_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = hyperram_init &rArr; HAL_XSPI_Init &rArr; HAL_XSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPIM_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_memory_mapped
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_config_differential_clock
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_check_identification
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_hardware_reset
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_HyperbusCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>led_init</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, led.o(.text.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = led_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>main</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = main &rArr; sys_xspi1_enable_memmapmode &rArr; HAL_XSPI_Init &rArr; HAL_XSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_xspi1_enable_memmapmode
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Lock
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Unlock
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_stm32_clock_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_cache_enable
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mpu_config
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToApplication
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ec]"></a>sys_cache_enable</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, sys.o(.text.sys_cache_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_cache_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>sys_mpu_config</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, sys.o(.text.sys_mpu_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sys_mpu_config &rArr; HAL_MPU_ConfigRegion
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_Enable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_ConfigRegion
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>sys_stm32_clock_init</STRONG> (Thumb, 310 bytes, Stack size 64 bytes, sys.o(.text.sys_stm32_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = sys_stm32_clock_init &rArr; HAL_RCC_OscConfig &rArr; RCC_PLL_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableUSBVoltageDetector
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SBS_EnableIOSpeedOptimize
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableXSPIM2
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableXSPIM1
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>sys_xspi1_enable_memmapmode</STRONG> (Thumb, 2578 bytes, Stack size 240 bytes, sys.o(.text.sys_xspi1_enable_memmapmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = sys_xspi1_enable_memmapmode &rArr; HAL_XSPI_Init &rArr; HAL_XSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_SetClockPrescaler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MemoryMapped
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Transmit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_AutoPolling
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Receive
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPIM_Config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_DeInit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f4]"></a>usart_init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, usart.o(.text.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = usart_init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[109]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[10a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[10b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[be]"></a>RCC_PLL_Config</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, stm32h7rsxx_hal_rcc.o(.text.RCC_PLL_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RCC_PLL_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[9d]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
<LI> stm32h7rsxx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN)
</UL>
<P><STRONG><a name="[9e]"></a>UART_RxISR_8BIT_FIFOEN</STRONG> (Thumb, 468 bytes, Stack size 40 bytes, stm32h7rsxx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_RxISR_8BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[9c]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
<LI> stm32h7rsxx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN)
</UL>
<P><STRONG><a name="[9f]"></a>UART_RxISR_16BIT_FIFOEN</STRONG> (Thumb, 464 bytes, Stack size 40 bytes, stm32h7rsxx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_RxISR_16BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7rsxx_hal_uart.o(.text.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[9b]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7rsxx_hal_uart.o(.text.UART_DMAAbortOnError))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7rsxx_hal_uart.o(.text.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[d4]"></a>XSPI_ConfigCmd</STRONG> (Thumb, 446 bytes, Stack size 32 bytes, stm32h7rsxx_hal_xspi.o(.text.XSPI_ConfigCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = XSPI_ConfigCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
</UL>

<P><STRONG><a name="[e5]"></a>hyperram_hardware_reset</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hyperram.o(.text.hyperram_hardware_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hyperram_hardware_reset &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
</UL>

<P><STRONG><a name="[e3]"></a>hyperram_check_identification</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, hyperram.o(.text.hyperram_check_identification))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hyperram_check_identification &rArr; HAL_XSPI_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Receive
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_HyperbusCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
</UL>

<P><STRONG><a name="[e4]"></a>hyperram_config_differential_clock</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, hyperram.o(.text.hyperram_config_differential_clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hyperram_config_differential_clock &rArr; HAL_XSPI_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Transmit
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Receive
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_HyperbusCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
</UL>

<P><STRONG><a name="[e9]"></a>hyperram_memory_mapped</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, hyperram.o(.text.hyperram_memory_mapped))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hyperram_memory_mapped &rArr; HAL_XSPI_MemoryMapped
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MemoryMapped
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_HyperbusCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hyperram_init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
